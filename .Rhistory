# Doing some test cases
library(tidyverse)
library(reshape2)
library(devtools)
setwd("T:/ggIFS_dev/ggIFS")
load_all()
# Check how singleplot works - conclusion: they don't
iris1 <- iris %>%
filter(Species == "setosa") %>%
mutate(mean_length = mean(Sepal.Length, na.rm = T))
x <- ggplot(iris1) +
geom_bar(aes(x = Species, y = mean_length), stat = "identity") +
scale_fill_ifs()
x <- ggplot(iris1) +
geom_bar(aes(x = Species, y = mean_length), stat = "identity") +
scale_fill_ifs()
x
# check scale_fill manual worls
iris2 <- iris %>%
#mutate(x = 0.5, y = 0.5) %>%
group_by(Species) %>%
summarize(across(.cols = everything(), mean, na.rm = T)) %>%
melt(id = "Species") %>%
rename(Legend = variable)
y1 <- ggplot(iris2) +
geom_bar(aes(x = Species, y = value, fill = Legend), width = 0.5, stat = "identity") +
theme_ifs() +
ylab("Millimetres") +
scale_fill_ifs()
y1
# check manual colour assignment
ggplot(iris2) +
geom_bar(aes(x = Species, y = value, fill = Legend), width = 0.5, stat = "identity") +
theme_ifs() +
ylab("Millimetres") +
scale_fill_ifs(values = c("Sepal.Width" = "mid_grey", "Sepal.Length" = "mid_yellow", "Petal.Length" = "mid_red", "Petal.Width" = "mid_purple"))
# Check manual, unnamed colour assignment
ggplot(iris2) +
geom_bar(aes(x = Species, y = value, fill = Legend), width = 0.5, stat = "identity") +
theme_ifs() +
ylab("Millimetres") +
scale_fill_ifs(values = c("mid_grey", "mid_yellow", "mid_red", "mid_purple"))
# check manual colour assignment
ggplot(iris2) +
geom_bar(aes(x = Species, y = value, fill = Legend), width = 0.5, stat = "identity") +
theme_ifs() +
ylab("Millimetres") +
scale_fill_ifs(values = c("Sepal.Width" = "mid_grey", "Sepal.Length" = "mid_yellow", "Petal.Length" = "mid_red", "Petal.Width" = "mid_purple"))
# Check manual, unnamed colour assignment
ggplot(iris2) +
geom_bar(aes(x = Species, y = value, fill = Legend), width = 0.5, stat = "identity") +
theme_ifs() +
ylab("Millimetres") +
scale_fill_ifs(values = c("mid_grey", "mid_yellow", "mid_red", "mid_purple"))
# check big facet wrap
iris3 <- iris2 %>%
mutate(facet = ifelse(Legend == "Sepal.Length" | Legend == "Sepal.Width", "F1", "F2"))
y2 <- ggplot(iris3) +
geom_bar(aes(x = Species, y = value, fill = Legend), stat = "identity") +
theme_ifs() +
facet_wrap(~facet, ncol = 1) +
scale_fill_ifs(values = c("mid_green", "mid_blue", "mid_red", "mid_yellow"))
y2
# check scale colour ifs works
# checking gradient works
ggplot(iris) +
geom_point(aes(x = Sepal.Length, y = Sepal.Width, col = Petal.Length), stat = "identity") +
theme_ifs() +
scale_colour_ifs(values = c("dark_green_2", "mid_yellow"), gradient = T)
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces)
melt(id = "Year") %>%
rename(Legend = variable)
l1 <- ggplot(longley2) +
geom_line(aes(x = Year, y = value, col = Legend), size = 1) +
theme_ifs() +
ylab("Million People") +
theme(axis.title.x = element_blank()) +
scale_colour_ifs()
l1
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces)
data("longley")
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces)
melt(id = "Year") %>%
rename(Legend = variable)
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces) %>%
melt(id = "Year") %>%
rename(Legend = variable)
l1 <- ggplot(longley2) +
geom_line(aes(x = Year, y = value, col = Legend), size = 1) +
theme_ifs() +
ylab("Million People") +
theme(axis.title.x = element_blank()) +
scale_colour_ifs()
l1
# Checking actual colours
ggplot(iris) +
geom_point(aes(x = Sepal.Length, y = Sepal.Width, col = Petal.Length), stat = "identity") +
theme_ifs() +
scale_colour_ifs(values = c("dark_green_2", "mid_yellow"), gradient = T)
?margin
y1 <- ggplot(iris2) +
geom_bar(aes(x = Species, y = value, fill = Legend), width = 0.5, stat = "identity") +
theme_ifs() +
ylab("Millimetres") +
scale_fill_ifs()
y1
theme_ifs
devtools::install()
# Check how singleplot works - conclusion: they don't
iris1 <- iris %>%
filter(Species == "setosa") %>%
mutate(mean_length = mean(Sepal.Length, na.rm = T))
library(tidyverse)
library(reshape2)
library(devtools)
setwd("T:/ggIFS_dev/ggIFS")
load_all()
# Check how singleplot works - conclusion: they don't
iris1 <- iris %>%
filter(Species == "setosa") %>%
mutate(mean_length = mean(Sepal.Length, na.rm = T))
x <- ggplot(iris1) +
geom_bar(aes(x = Species, y = mean_length), stat = "identity") +
scale_fill_ifs()
# check scale_fill manual worls
iris2 <- iris %>%
#mutate(x = 0.5, y = 0.5) %>%
group_by(Species) %>%
summarize(across(.cols = everything(), mean, na.rm = T)) %>%
melt(id = "Species") %>%
rename(Legend = variable)
y1 <- ggplot(iris2) +
geom_bar(aes(x = Species, y = value, fill = Legend), width = 0.5, stat = "identity") +
theme_ifs() +
ylab("Millimetres") +
scale_fill_ifs()
y1
# check ggsave
ggsave_ifs("test_graph1.png", y1, path = "tests/")
# check manual colour assignment
ggplot(iris2) +
geom_bar(aes(x = Species, y = value, fill = Legend), width = 0.5, stat = "identity") +
theme_ifs() +
ylab("Millimetres") +
scale_fill_ifs(values = c("Sepal.Width" = "mid_grey", "Sepal.Length" = "mid_yellow", "Petal.Length" = "mid_red", "Petal.Width" = "mid_purple"))
# Check manual, unnamed colour assignment
ggplot(iris2) +
geom_bar(aes(x = Species, y = value, fill = Legend), width = 0.5, stat = "identity") +
theme_ifs() +
ylab("Millimetres") +
scale_fill_ifs(values = c("mid_grey", "mid_yellow", "mid_red", "mid_purple"))
y2 <- y1 +
scale_fill_ifs(palette = "greens")
y3 <- y1 +
scale_fill_ifs(palette = "greys")
y4 <- y1 +
scale_fill_ifs(palette = "yellows")
y_all <- ggpubr::ggarrange(y1, y2, y3, y4, common.legend = T, legend = "bottom")
ggsave_ifs("test_multiple_palettes.png", y_all, height = 200, width = 270, path = "tests/")
# check big facet wrap
iris3 <- iris2 %>%
mutate(facet = ifelse(Legend == "Sepal.Length" | Legend == "Sepal.Width", "F1", "F2"))
y2 <- ggplot(iris3) +
geom_bar(aes(x = Species, y = value, fill = Legend), stat = "identity") +
theme_ifs() +
facet_wrap(~facet, ncol = 1) +
scale_fill_ifs(values = c("mid_green", "mid_blue", "mid_red", "mid_yellow"))
ggsave_ifs("test_graph_facet.png", y2, path = "tests/")
# check scale colour ifs works
# checking gradient works
ggplot(iris) +
geom_point(aes(x = Sepal.Length, y = Sepal.Width, col = Petal.Length), stat = "identity") +
theme_ifs() +
scale_colour_ifs(values = c("dark_green_2", "mid_yellow"), gradient = T)
data("longley")
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces) %>%
melt(id = "Year") %>%
rename(Legend = variable)
l1 <- ggplot(longley2) +
geom_line(aes(x = Year, y = value, col = Legend), size = 1) +
theme_ifs() +
ylab("Million People") +
theme(axis.title.x = element_blank()) +
scale_colour_ifs()
l1
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces) %>%
melt(id = "Year") %>%
rename(Legend = variable)
longley2
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces) %>%
melt(id = "Year") %>%
rename(Legend = variable) %>%
arrange(variable)
l1 <- ggplot(longley2) +
geom_line(aes(x = Year, y = value, col = Legend), size = 1) +
theme_ifs() +
ylab("Million People") +
theme(axis.title.x = element_blank()) +
scale_colour_ifs()
l1
load_all()
l1 <- ggplot(longley2) +
geom_line(aes(x = Year, y = value, col = Legend), size = 1) +
theme_ifs() +
ylab("Million People") +
theme(axis.title.x = element_blank()) +
scale_colour_ifs()
l1
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces) %>%
melt(id = "Year") %>%
rename(Legend = variable) %>%
arrange(variable)
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces) %>%
melt(id = "Year") %>%
rename(Legend = variable) %>%
arrange(Legend)
l1 <- ggplot(longley2) +
geom_line(aes(x = Year, y = value, col = Legend), size = 1) +
theme_ifs() +
ylab("Million People") +
theme(axis.title.x = element_blank()) +
scale_colour_ifs()
l1
str(longley)
str(longley2)
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces) %>%
melt(id = "Year") %>%
rename(Legend = variable) %>%
arrange(Legend) %>%
mutate(Legend = as.character(Legend))
l1 <- ggplot(longley2) +
geom_line(aes(x = Year, y = value, col = Legend), size = 1) +
theme_ifs() +
ylab("Million People") +
theme(axis.title.x = element_blank()) +
scale_colour_ifs()
l1
load_all()
longley2 <- longley %>%
select(Year, Unemployed, Armed.Forces) %>%
rename(`Armed Forces` = Armed.Forces) %>%
melt(id = "Year") %>%
rename(Legend = variable) %>%
arrange(Legend) %>%
mutate(Legend = as.character(Legend))
l1 <- ggplot(longley2) +
geom_line(aes(x = Year, y = value, col = Legend), size = 1) +
theme_ifs() +
ylab("Million People") +
theme(axis.title.x = element_blank()) +
scale_colour_ifs()
l1
